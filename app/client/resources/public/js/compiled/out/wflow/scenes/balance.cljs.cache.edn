{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name wflow.scenes.balance, :imports nil, :requires {t wflow.utils.transit, wflow.data.user wflow.data.user, wflow.data.workflows wflow.data.workflows, user wflow.data.user, data.workflows wflow.data.workflows, reagent.core reagent.core, r reagent.core, soda-ash.core soda-ash.core, router wflow.router, layout wflow.components.layout, wflow.components.layout wflow.components.layout, cljs.pprint cljs.pprint, wflow.router wflow.router, wflow.utils.transit wflow.utils.transit, sa soda-ash.core, wflow.services.workflow wflow.services.workflow, clojure.pprint cljs.pprint, workflow wflow.services.workflow, re-frame re-frame.core, re-frame.core re-frame.core}, :cljs.spec/speced-vars [], :uses {pprint cljs.pprint}, :defs {content-style {:name wflow.scenes.balance/content-style, :file "src/cljs/wflow/scenes/balance.cljs", :line 14, :column 1, :end-line 14, :end-column 19, :meta {:file "/Users/allanjiang/Developer/dapps/cs359b-web-workflow-marketplace/app/client/src/cljs/wflow/scenes/balance.cljs", :line 14, :column 6, :end-line 14, :end-column 19}, :tag cljs.core/IMap}, balance {:protocol-inline nil, :meta {:file "/Users/allanjiang/Developer/dapps/cs359b-web-workflow-marketplace/app/client/src/cljs/wflow/scenes/balance.cljs", :line 22, :column 7, :end-line 22, :end-column 14, :arglists (quote ([]))}, :name wflow.scenes.balance/balance, :variadic false, :file "src/cljs/wflow/scenes/balance.cljs", :end-column 14, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 22, :end-line 22, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, home-panel {:protocol-inline nil, :meta {:file "/Users/allanjiang/Developer/dapps/cs359b-web-workflow-marketplace/app/client/src/cljs/wflow/scenes/balance.cljs", :line 30, :column 7, :end-line 30, :end-column 17, :arglists (quote ([]))}, :name wflow.scenes.balance/home-panel, :variadic false, :file "src/cljs/wflow/scenes/balance.cljs", :end-column 17, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 30, :end-line 30, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :cljs.spec/registry-ref [], :require-macros {r reagent.core, reagent.core reagent.core, cljs.pprint cljs.pprint, clojure.pprint cljs.pprint}, :cljs.analyzer/constants {:seen #{:color :navigate :bottom :top :wflow.router/route-page :as :handle-item-click :style :div :balance :padded :right :position :h3 :active-item :left}, :order [:position :left :right :top :bottom :div :as :h3 :color :wflow.router/route-page :navigate :active-item :handle-item-click :style :padded :balance]}, :doc nil}