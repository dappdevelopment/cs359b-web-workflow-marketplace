{:rename-macros {}, :renames {}, :externs {Error {}, location {href {}}}, :use-macros {}, :excludes #{}, :name wflow.router, :imports {History goog.History}, :requires {services.re-frame wflow.services.re-frame, gevents goog.events, Uri goog.Uri, QueryData goog.Uri.QueryData, bidi.bidi bidi.bidi, bidi bidi.bidi, EventType goog.history.EventType, wflow.utils.storage wflow.utils.storage, goog.Uri.QueryData goog.Uri.QueryData, goog.Uri goog.Uri, o oops.core, goog.history.EventType goog.history.EventType, server wflow.services.server, wflow.services.re-frame wflow.services.re-frame, oops.core oops.core, History goog.History, wflow.services.server wflow.services.server, goog.events goog.events, re-frame re-frame.core, storage wflow.utils.storage, re-frame.core re-frame.core}, :cljs.spec/speced-vars [], :uses nil, :defs {panels {:name wflow.router/panels, :file "src/cljs/wflow/router.cljs", :line 167, :column 1, :end-line 167, :end-column 17, :meta {:file "/Users/allanjiang/Developer/dapps/cs359b-web-workflow-marketplace/app/client/src/cljs/wflow/router.cljs", :line 167, :column 11, :end-line 167, :end-column 17}, :tag cljs.core/MultiFn}, ext-url-for {:protocol-inline nil, :meta {:file "/Users/allanjiang/Developer/dapps/cs359b-web-workflow-marketplace/app/client/src/cljs/wflow/router.cljs", :line 79, :column 7, :end-line 79, :end-column 18, :arglists (quote ([& args])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}}, :name wflow.router/ext-url-for, :variadic true, :file "src/cljs/wflow/router.cljs", :end-column 18, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}, :method-params [(args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 79, :end-line 79, :max-fixed-arity 0, :fn-var true, :arglists ([& args])}, authorized-routes {:name wflow.router/authorized-routes, :file "src/cljs/wflow/router.cljs", :line 34, :column 1, :end-line 34, :end-column 23, :meta {:file "/Users/allanjiang/Developer/dapps/cs359b-web-workflow-marketplace/app/client/src/cljs/wflow/router.cljs", :line 34, :column 6, :end-line 34, :end-column 23}, :tag cljs.core/IMap}, start! {:protocol-inline nil, :meta {:file "/Users/allanjiang/Developer/dapps/cs359b-web-workflow-marketplace/app/client/src/cljs/wflow/router.cljs", :line 56, :column 7, :end-line 56, :end-column 13, :arglists (quote ([]))}, :name wflow.router/start!, :variadic false, :file "src/cljs/wflow/router.cljs", :end-column 13, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 56, :end-line 56, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, routes {:name wflow.router/routes, :file "src/cljs/wflow/router.cljs", :line 21, :column 1, :end-line 21, :end-column 12, :meta {:file "/Users/allanjiang/Developer/dapps/cs359b-web-workflow-marketplace/app/client/src/cljs/wflow/router.cljs", :line 21, :column 6, :end-line 21, :end-column 12}, :tag cljs.core/IVector}, dispatch-route {:protocol-inline nil, :meta {:file "/Users/allanjiang/Developer/dapps/cs359b-web-workflow-marketplace/app/client/src/cljs/wflow/router.cljs", :line 50, :column 8, :end-line 50, :end-column 22, :private true, :arglists (quote ([matched-route url]))}, :private true, :name wflow.router/dispatch-route, :variadic false, :file "src/cljs/wflow/router.cljs", :end-column 22, :method-params ([matched-route url]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 50, :end-line 50, :max-fixed-arity 2, :fn-var true, :arglists (quote ([matched-route url]))}, compute-path {:protocol-inline nil, :meta {:file "/Users/allanjiang/Developer/dapps/cs359b-web-workflow-marketplace/app/client/src/cljs/wflow/router.cljs", :line 67, :column 7, :end-line 67, :end-column 19, :arglists (quote ([& args])), :doc "allows you to have last arg to url-for be query parameters\n  It must have the key {:query-params {}}", :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}}, :name wflow.router/compute-path, :variadic true, :file "src/cljs/wflow/router.cljs", :end-column 19, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}, :method-params [(args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 67, :end-line 67, :max-fixed-arity 0, :fn-var true, :arglists ([& args]), :doc "allows you to have last arg to url-for be query parameters\n  It must have the key {:query-params {}}"}, static-resources {:name wflow.router/static-resources, :file "src/cljs/wflow/router.cljs", :line 16, :column 1, :end-line 16, :end-column 22, :meta {:file "/Users/allanjiang/Developer/dapps/cs359b-web-workflow-marketplace/app/client/src/cljs/wflow/router.cljs", :line 16, :column 6, :end-line 16, :end-column 22}, :tag cljs.core/IMap}, parse-url {:protocol-inline nil, :meta {:file "/Users/allanjiang/Developer/dapps/cs359b-web-workflow-marketplace/app/client/src/cljs/wflow/router.cljs", :line 40, :column 8, :end-line 40, :end-column 17, :private true, :arglists (quote ([url])), :doc "bidi parse URL, and also handle query params"}, :private true, :name wflow.router/parse-url, :variadic false, :file "src/cljs/wflow/router.cljs", :end-column 17, :method-params ([url]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 40, :end-line 40, :max-fixed-arity 1, :fn-var true, :arglists (quote ([url])), :doc "bidi parse URL, and also handle query params"}, url-for {:protocol-inline nil, :meta {:file "/Users/allanjiang/Developer/dapps/cs359b-web-workflow-marketplace/app/client/src/cljs/wflow/router.cljs", :line 83, :column 7, :end-line 83, :end-column 14, :arglists (quote ([& args])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}}, :name wflow.router/url-for, :variadic true, :file "src/cljs/wflow/router.cljs", :end-column 14, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}, :method-params [(args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 83, :end-line 83, :max-fixed-arity 0, :fn-var true, :arglists ([& args])}}, :cljs.spec/registry-ref [], :require-macros {o oops.core, oops.core oops.core}, :cljs.analyzer/constants {:seen #{:memory-store :request :home :navigate :wflow.router/auth-success :db :default :authorization :wflow.router/route-page :wflow.router/validate-session :workflow/create :public :signup :settings :set-url :debug :page :ajax :route :ext-navigate :wflow.router/request-route :login :accessToken :route-params :div :dispatch :token :balance :strategy :fail :success :wflow.router/navigate :local-store :url :session/valid :query-params :wflow.router/route-params :hierarchy :h3 :handler :marketplace :p :session :data}, :order [:home :balance :workflow/create :settings :marketplace :debug :login :signup :public :query-params :handler :route-params :wflow.router/request-route :page :url :wflow.router/navigate :route :wflow.router/route-params :wflow.router/route-page :navigate :ext-navigate :set-url :local-store :memory-store :db :token :session :accessToken :dispatch :session/valid :ajax :request :success :fail :data :authorization :strategy :wflow.router/auth-success :wflow.router/validate-session :hierarchy :default :div :h3 :p]}, :doc nil}