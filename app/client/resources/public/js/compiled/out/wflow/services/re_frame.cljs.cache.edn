{:rename-macros {}, :renames {}, :externs {Promise {resolve {}}, Object {then {}}, Math {ceil {}}, Error {}}, :use-macros {}, :excludes #{}, :name wflow.services.re-frame, :imports nil, :requires {re-frame re-frame.core, re-frame.core re-frame.core, server wflow.services.server, wflow.services.server wflow.services.server, storage wflow.utils.storage, wflow.utils.storage wflow.utils.storage, s cljs.spec.alpha, cljs.spec.alpha cljs.spec.alpha}, :cljs.spec/speced-vars [], :uses nil, :defs {reg-sub-remote {:protocol-inline nil, :meta {:file "/Users/allanjiang/Developer/dapps/cs359b-web-workflow-marketplace/app/client/src/cljs/wflow/services/re_frame.cljs", :line 21, :column 7, :end-line 21, :end-column 21, :arglists (quote ([kw {:keys [path query cleanup default], :or {query identity, cleanup identity, default nil}}]))}, :name wflow.services.re-frame/reg-sub-remote, :variadic false, :file "src/cljs/wflow/services/re_frame.cljs", :end-column 21, :method-params ([kw p__46112]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 21, :end-line 21, :max-fixed-arity 2, :fn-var true, :arglists (quote ([kw {:keys [path query cleanup default], :or {query identity, cleanup identity, default nil}}]))}, page-params {:protocol-inline nil, :meta {:file "/Users/allanjiang/Developer/dapps/cs359b-web-workflow-marketplace/app/client/src/cljs/wflow/services/re_frame.cljs", :line 36, :column 8, :end-line 36, :end-column 19, :private true, :arglists (quote ([query]))}, :private true, :name wflow.services.re-frame/page-params, :variadic false, :file "src/cljs/wflow/services/re_frame.cljs", :end-column 19, :method-params ([query]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 36, :end-line 36, :max-fixed-arity 1, :fn-var true, :arglists (quote ([query]))}, rest-store {:protocol-inline nil, :meta {:file "/Users/allanjiang/Developer/dapps/cs359b-web-workflow-marketplace/app/client/src/cljs/wflow/services/re_frame.cljs", :line 48, :column 7, :end-line 48, :end-column 17, :arglists (quote ([id {:keys [default persistence paging url url-fn query-fn], :or {paging true, default {:data []}}}]))}, :name wflow.services.re-frame/rest-store, :variadic false, :file "src/cljs/wflow/services/re_frame.cljs", :end-column 17, :method-params ([id p__46122]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 48, :end-line 48, :max-fixed-arity 2, :fn-var true, :arglists (quote ([id {:keys [default persistence paging url url-fn query-fn], :or {paging true, default {:data []}}}]))}, rest-call {:protocol-inline nil, :meta {:file "/Users/allanjiang/Developer/dapps/cs359b-web-workflow-marketplace/app/client/src/cljs/wflow/services/re_frame.cljs", :line 122, :column 7, :end-line 122, :end-column 16, :arglists (quote ([id {:keys [method path success fail]}]))}, :name wflow.services.re-frame/rest-call, :variadic false, :file "src/cljs/wflow/services/re_frame.cljs", :end-column 16, :method-params ([id p__46154]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 122, :end-line 122, :max-fixed-arity 2, :fn-var true, :arglists (quote ([id {:keys [method path success fail]}]))}, check-and-throw {:protocol-inline nil, :meta {:file "/Users/allanjiang/Developer/dapps/cs359b-web-workflow-marketplace/app/client/src/cljs/wflow/services/re_frame.cljs", :line 135, :column 7, :end-line 135, :end-column 22, :arglists (quote ([a-spec db])), :doc "Throws an exception if `db` doesn't match the Spec `a-spec`."}, :name wflow.services.re-frame/check-and-throw, :variadic false, :file "src/cljs/wflow/services/re_frame.cljs", :end-column 22, :method-params ([a-spec db]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 135, :end-line 135, :max-fixed-arity 2, :fn-var true, :arglists (quote ([a-spec db])), :doc "Throws an exception if `db` doesn't match the Spec `a-spec`."}, spec-intc {:protocol-inline nil, :meta {:file "/Users/allanjiang/Developer/dapps/cs359b-web-workflow-marketplace/app/client/src/cljs/wflow/services/re_frame.cljs", :line 143, :column 7, :end-line 143, :end-column 16, :arglists (quote ([a-spec]))}, :name wflow.services.re-frame/spec-intc, :variadic false, :file "src/cljs/wflow/services/re_frame.cljs", :end-column 16, :method-params ([a-spec]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 143, :end-line 143, :max-fixed-arity 1, :fn-var true, :arglists (quote ([a-spec]))}, ->local-store {:name wflow.services.re-frame/->local-store, :file "src/cljs/wflow/services/re_frame.cljs", :line 160, :column 1, :end-line 160, :end-column 19, :meta {:file "/Users/allanjiang/Developer/dapps/cs359b-web-workflow-marketplace/app/client/src/cljs/wflow/services/re_frame.cljs", :line 160, :column 6, :end-line 160, :end-column 19}, :tag any}, fx->event {:protocol-inline nil, :meta {:file "/Users/allanjiang/Developer/dapps/cs359b-web-workflow-marketplace/app/client/src/cljs/wflow/services/re_frame.cljs", :line 165, :column 7, :end-line 165, :end-column 16, :arglists (quote ([fx-id]))}, :name wflow.services.re-frame/fx->event, :variadic false, :file "src/cljs/wflow/services/re_frame.cljs", :end-column 16, :method-params ([fx-id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 165, :end-line 165, :max-fixed-arity 1, :fn-var true, :arglists (quote ([fx-id]))}}, :cljs.spec/registry-ref [], :require-macros {s cljs.spec.alpha, cljs.spec.alpha cljs.spec.alpha}, :cljs.analyzer/constants {:seen #{:memory-store :path :wflow.services.re-frame/clean-path :request :limit :db :method :query-fn :default :authorization :url-fn :page :ajax :wflow.services.re-frame/write-path :accessToken :pages :paging :active-page :total :fail :success :local-store :url :stores :on-dispose :persistence :query :skip :session :cleanup :reload-store :data}, :order [:wflow.services.re-frame/write-path :wflow.services.re-frame/clean-path :path :query :cleanup :default :on-dispose :page :data :persistence :paging :url :url-fn :query-fn :stores :session :accessToken :authorization :reload-store :db :total :limit :skip :pages :active-page :ajax :request :success :fail :method :local-store :memory-store]}, :doc nil}