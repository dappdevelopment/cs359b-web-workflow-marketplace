{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name wflow.scenes.workflow.create, :imports nil, :requires {t wflow.utils.transit, wflow.utils.forms wflow.utils.forms, goog.dom goog.dom, forms wflow.utils.forms, reagent.core reagent.core, r reagent.core, soda-ash.core soda-ash.core, router wflow.router, layout wflow.components.layout, wflow.components.layout wflow.components.layout, cljs.pprint cljs.pprint, wflow.router wflow.router, gdom goog.dom, wflow.utils.transit wflow.utils.transit, sa soda-ash.core, wflow.services.workflow wflow.services.workflow, clojure.pprint cljs.pprint, workflow wflow.services.workflow, re-frame re-frame.core, re-frame.core re-frame.core}, :cljs.spec/speced-vars [], :uses {pprint cljs.pprint}, :defs {content-style {:name wflow.scenes.workflow.create/content-style, :file "src/cljs/wflow/scenes/workflow/create.cljs", :line 14, :column 1, :end-line 14, :end-column 19, :meta {:file "/Users/allanjiang/Developer/dapps/cs359b-web-workflow-marketplace/app/client/src/cljs/wflow/scenes/workflow/create.cljs", :line 14, :column 6, :end-line 14, :end-column 19}, :tag cljs.core/IMap}, create-workflow {:protocol-inline nil, :meta {:file "/Users/allanjiang/Developer/dapps/cs359b-web-workflow-marketplace/app/client/src/cljs/wflow/scenes/workflow/create.cljs", :line 31, :column 7, :end-line 31, :end-column 22, :arglists (quote ([e]))}, :name wflow.scenes.workflow.create/create-workflow, :variadic false, :file "src/cljs/wflow/scenes/workflow/create.cljs", :end-column 22, :method-params ([e]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 31, :end-line 31, :max-fixed-arity 1, :fn-var true, :arglists (quote ([e]))}, workflows {:protocol-inline nil, :meta {:file "/Users/allanjiang/Developer/dapps/cs359b-web-workflow-marketplace/app/client/src/cljs/wflow/scenes/workflow/create.cljs", :line 39, :column 7, :end-line 39, :end-column 16, :arglists (quote ([]))}, :name wflow.scenes.workflow.create/workflows, :variadic false, :file "src/cljs/wflow/scenes/workflow/create.cljs", :end-column 16, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 39, :end-line 39, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, home-panel {:protocol-inline nil, :meta {:file "/Users/allanjiang/Developer/dapps/cs359b-web-workflow-marketplace/app/client/src/cljs/wflow/scenes/workflow/create.cljs", :line 66, :column 7, :end-line 66, :end-column 17, :arglists (quote ([]))}, :name wflow.scenes.workflow.create/home-panel, :variadic false, :file "src/cljs/wflow/scenes/workflow/create.cljs", :end-column 17, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 66, :end-line 66, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :cljs.spec/registry-ref [], :require-macros {r reagent.core, reagent.core reagent.core, cljs.pprint cljs.pprint, clojure.pprint cljs.pprint}, :cljs.analyzer/constants {:seen #{:request :vertical-align :navigate :wflow.scenes.workflow.create/create-workflow :placeholder :bottom :top :db :authorization :wflow.router/route-page :name :as :handle-item-click :workflow/create :type :ajax :max-width :accessToken :style :div :toast :fail :raised :success :label :id :right :on-submit :position :input :centered :active-item :left :session :span :data}, :order [:position :left :right :top :bottom :wflow.scenes.workflow.create/create-workflow :db :ajax :request :success :fail :data :authorization :session :accessToken :toast :centered :vertical-align :style :max-width :raised :as :id :on-submit :label :input :placeholder :name :span :type :wflow.router/route-page :navigate :div :active-item :handle-item-click :workflow/create]}, :doc nil}