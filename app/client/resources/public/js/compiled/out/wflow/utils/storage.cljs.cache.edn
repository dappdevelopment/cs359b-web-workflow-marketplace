{:rename-macros {}, :renames {}, :externs {localStorage {setItem {}, getItem {}}}, :use-macros {}, :excludes #{}, :name wflow.utils.storage, :imports nil, :requires {t wflow.utils.transit, wflow.utils.transit wflow.utils.transit, config wflow.config, wflow.config wflow.config, re-frame re-frame.core, re-frame.core re-frame.core}, :cljs.spec/speced-vars [], :uses nil, :defs {data->local-store {:protocol-inline nil, :meta {:file "/Users/allanjiang/Developer/dapps/cs359b-web-workflow-marketplace/app/client/src/cljs/wflow/utils/storage.cljs", :line 7, :column 7, :end-line 7, :end-column 24, :arglists (quote ([data]))}, :name wflow.utils.storage/data->local-store, :variadic false, :file "src/cljs/wflow/utils/storage.cljs", :end-column 24, :method-params ([data]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 7, :end-line 7, :max-fixed-arity 1, :fn-var true, :arglists (quote ([data]))}, local-store->data {:protocol-inline nil, :meta {:file "/Users/allanjiang/Developer/dapps/cs359b-web-workflow-marketplace/app/client/src/cljs/wflow/utils/storage.cljs", :line 12, :column 7, :end-line 12, :end-column 24, :arglists (quote ([]))}, :name wflow.utils.storage/local-store->data, :variadic false, :file "src/cljs/wflow/utils/storage.cljs", :end-column 24, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 12, :end-line 12, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, memory-store {:name wflow.utils.storage/memory-store, :file "src/cljs/wflow/utils/storage.cljs", :line 17, :column 1, :end-line 17, :end-column 18, :meta {:file "/Users/allanjiang/Developer/dapps/cs359b-web-workflow-marketplace/app/client/src/cljs/wflow/utils/storage.cljs", :line 17, :column 6, :end-line 17, :end-column 18}, :tag any}}, :cljs.spec/registry-ref [], :require-macros nil, :doc nil}