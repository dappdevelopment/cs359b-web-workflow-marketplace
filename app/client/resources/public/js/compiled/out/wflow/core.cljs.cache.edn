{:rename-macros {}, :renames {}, :externs {document {getElementById {}}}, :use-macros {}, :excludes #{}, :name wflow.core, :imports nil, :requires {reagent reagent.core, wflow.scenes.balance wflow.scenes.balance, wflow.scenes.workflow.create wflow.scenes.workflow.create, wflow.scenes.home wflow.scenes.home, wflow.scenes.workflow.marketplace wflow.scenes.workflow.marketplace, reagent.core reagent.core, router wflow.router, config wflow.config, wflow.config wflow.config, wflow.scenes.settings wflow.scenes.settings, wflow.router wflow.router, wflow.scenes.user.signup wflow.scenes.user.signup, wflow.scenes.user.login wflow.scenes.user.login, toast wflow.services.toast, re-frame re-frame.core, re-frame.core re-frame.core, wflow.scenes.debug wflow.scenes.debug, wflow.services.toast wflow.services.toast}, :cljs.spec/speced-vars [], :uses nil, :defs {dev-setup {:protocol-inline nil, :meta {:file "/Users/allanjiang/Developer/dapps/cs359b-web-workflow-marketplace/app/client/src/cljs/wflow/core.cljs", :line 19, :column 7, :end-line 19, :end-column 16, :arglists (quote ([]))}, :name wflow.core/dev-setup, :variadic false, :file "src/cljs/wflow/core.cljs", :end-column 16, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 19, :end-line 19, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, main-panel {:protocol-inline nil, :meta {:file "/Users/allanjiang/Developer/dapps/cs359b-web-workflow-marketplace/app/client/src/cljs/wflow/core.cljs", :line 25, :column 7, :end-line 25, :end-column 17, :arglists (quote ([]))}, :name wflow.core/main-panel, :variadic false, :file "src/cljs/wflow/core.cljs", :end-column 17, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 25, :end-line 25, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, mount-root {:protocol-inline nil, :meta {:file "/Users/allanjiang/Developer/dapps/cs359b-web-workflow-marketplace/app/client/src/cljs/wflow/core.cljs", :line 31, :column 7, :end-line 31, :end-column 17, :arglists (quote ([]))}, :name wflow.core/mount-root, :variadic false, :file "src/cljs/wflow/core.cljs", :end-column 17, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 31, :end-line 31, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, init {:protocol-inline nil, :meta {:file "/Users/allanjiang/Developer/dapps/cs359b-web-workflow-marketplace/app/client/src/cljs/wflow/core.cljs", :line 37, :column 16, :end-line 37, :end-column 20, :export true, :arglists (quote ([]))}, :name wflow.core/init, :variadic false, :file "src/cljs/wflow/core.cljs", :end-column 20, :method-params ([]), :protocol-impl nil, :export true, :arglists-meta (nil nil), :column 1, :line 37, :end-line 37, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :cljs.spec/registry-ref [], :require-macros {reagent reagent.core, reagent.core reagent.core}, :cljs.analyzer/constants {:seen #{:wflow.router/route-page}, :order [:wflow.router/route-page]}, :doc nil}