{:rename-macros {}, :renames {}, :externs {Date {}, prompt {}, setTimeout {}}, :use-macros {}, :excludes #{}, :name wflow.services.workflow, :imports nil, :requires {server wflow.services.server, wflow.services.server wflow.services.server}, :cljs.spec/speced-vars [], :uses nil, :defs {init {:protocol-inline nil, :meta {:file "/Users/allanjiang/Developer/dapps/cs359b-web-workflow-marketplace/app/client/src/cljs/wflow/services/workflow.cljs", :line 5, :column 7, :end-line 5, :end-column 11, :arglists (quote ([ctx]))}, :name wflow.services.workflow/init, :variadic false, :file "src/cljs/wflow/services/workflow.cljs", :end-column 11, :method-params ([ctx]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 5, :end-line 5, :max-fixed-arity 1, :fn-var true, :arglists (quote ([ctx]))}, start {:protocol-inline nil, :meta {:file "/Users/allanjiang/Developer/dapps/cs359b-web-workflow-marketplace/app/client/src/cljs/wflow/services/workflow.cljs", :line 11, :column 7, :end-line 11, :end-column 12, :arglists (quote ([ctx id]))}, :name wflow.services.workflow/start, :variadic false, :file "src/cljs/wflow/services/workflow.cljs", :end-column 12, :method-params ([ctx id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 11, :end-line 11, :max-fixed-arity 2, :fn-var true, :arglists (quote ([ctx id]))}, init+start {:protocol-inline nil, :meta {:file "/Users/allanjiang/Developer/dapps/cs359b-web-workflow-marketplace/app/client/src/cljs/wflow/services/workflow.cljs", :line 18, :column 7, :end-line 18, :end-column 17, :arglists (quote ([ctx]))}, :name wflow.services.workflow/init+start, :variadic false, :file "src/cljs/wflow/services/workflow.cljs", :end-column 17, :method-params ([ctx]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 18, :end-line 18, :max-fixed-arity 1, :fn-var true, :arglists (quote ([ctx]))}, stop {:protocol-inline nil, :meta {:file "/Users/allanjiang/Developer/dapps/cs359b-web-workflow-marketplace/app/client/src/cljs/wflow/services/workflow.cljs", :line 24, :column 7, :end-line 24, :end-column 11, :arglists (quote ([ctx id]))}, :name wflow.services.workflow/stop, :variadic false, :file "src/cljs/wflow/services/workflow.cljs", :end-column 11, :method-params ([ctx id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 24, :end-line 24, :max-fixed-arity 2, :fn-var true, :arglists (quote ([ctx id]))}, navigate {:protocol-inline nil, :meta {:file "/Users/allanjiang/Developer/dapps/cs359b-web-workflow-marketplace/app/client/src/cljs/wflow/services/workflow.cljs", :line 31, :column 7, :end-line 31, :end-column 15, :arglists (quote ([ctx id]))}, :name wflow.services.workflow/navigate, :variadic false, :file "src/cljs/wflow/services/workflow.cljs", :end-column 15, :method-params ([ctx id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 31, :end-line 31, :max-fixed-arity 2, :fn-var true, :arglists (quote ([ctx id]))}, click {:protocol-inline nil, :meta {:file "/Users/allanjiang/Developer/dapps/cs359b-web-workflow-marketplace/app/client/src/cljs/wflow/services/workflow.cljs", :line 39, :column 7, :end-line 39, :end-column 12, :arglists (quote ([ctx id]))}, :name wflow.services.workflow/click, :variadic false, :file "src/cljs/wflow/services/workflow.cljs", :end-column 12, :method-params ([ctx id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 39, :end-line 39, :max-fixed-arity 2, :fn-var true, :arglists (quote ([ctx id]))}, type-keys {:protocol-inline nil, :meta {:file "/Users/allanjiang/Developer/dapps/cs359b-web-workflow-marketplace/app/client/src/cljs/wflow/services/workflow.cljs", :line 47, :column 7, :end-line 47, :end-column 16, :arglists (quote ([ctx id]))}, :name wflow.services.workflow/type-keys, :variadic false, :file "src/cljs/wflow/services/workflow.cljs", :end-column 16, :method-params ([ctx id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 47, :end-line 47, :max-fixed-arity 2, :fn-var true, :arglists (quote ([ctx id]))}, do-actions {:protocol-inline nil, :meta {:file "/Users/allanjiang/Developer/dapps/cs359b-web-workflow-marketplace/app/client/src/cljs/wflow/services/workflow.cljs", :line 57, :column 7, :end-line 57, :end-column 17, :arglists (quote ([ctx id actions]))}, :name wflow.services.workflow/do-actions, :variadic false, :file "src/cljs/wflow/services/workflow.cljs", :end-column 17, :method-params ([ctx id actions]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 57, :end-line 57, :max-fixed-arity 3, :fn-var true, :arglists (quote ([ctx id actions]))}}, :cljs.spec/registry-ref [], :require-macros nil, :cljs.analyzer/constants {:seen #{:started :selector :logs :value :type :id :query :data}, :order [:logs :query :id :started :data :type :value :selector]}, :doc nil}