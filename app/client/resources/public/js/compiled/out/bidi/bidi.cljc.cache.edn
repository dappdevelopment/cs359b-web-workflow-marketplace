{:rename-macros {}, :renames {}, :externs {encodeURIComponent {}, decodeURIComponent {}, RegExp {prototype {bidi$bidi$PatternSegment$ {}, bidi$bidi$PatternSegment$segment-regex-group$arity$1 {}, bidi$bidi$PatternSegment$param-key$arity$1 {}, bidi$bidi$PatternSegment$transform-param$arity$1 {}, bidi$bidi$PatternSegment$matches?$arity$2 {}, bidi$bidi$Pattern$ {}, bidi$bidi$Pattern$match-pattern$arity$2 {}, bidi$bidi$Pattern$unmatch-pattern$arity$2 {}, pattern {}}}, Error {}, Number {}, isNaN {}}, :use-macros {}, :excludes #{uuid}, :name bidi.bidi, :imports {Uri goog.Uri}, :requires {clojure.string clojure.string, Uri goog.Uri}, :cljs.spec/speced-vars [], :uses nil, :defs {tag {:protocol-inline nil, :meta {:file "file:/Users/allanjiang/.m2/repository/bidi/bidi/2.1.3/bidi-2.1.3.jar!/bidi/bidi.cljc", :line 509, :column 7, :end-line 509, :end-column 10, :arglists (quote ([matched tag]))}, :name bidi.bidi/tag, :variadic false, :file "file:/Users/allanjiang/.m2/repository/bidi/bidi/2.1.3/bidi-2.1.3.jar!/bidi/bidi.cljc", :end-column 10, :method-params ([matched tag]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 509, :end-line 509, :max-fixed-arity 2, :fn-var true, :arglists (quote ([matched tag]))}, uuid {:protocol-inline nil, :meta {:file "file:/Users/allanjiang/.m2/repository/bidi/bidi/2.1.3/bidi-2.1.3.jar!/bidi/bidi.cljc", :line 22, :column 7, :end-line 22, :end-column 11, :arglists (quote ([s])), :doc "Function for creating a UUID of the appropriate type for the platform.\nNote that this function should _only_ be used in route patterns as, at least\nin the case of ClojureScript, it does not validate that the input string is\nactually a valid UUID (this is handled by the route matching logic)."}, :name bidi.bidi/uuid, :variadic false, :file "file:/Users/allanjiang/.m2/repository/bidi/bidi/2.1.3/bidi-2.1.3.jar!/bidi/bidi.cljc", :end-column 11, :method-params ([s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 22, :end-line 22, :max-fixed-arity 1, :fn-var true, :arglists (quote ([s])), :doc "Function for creating a UUID of the appropriate type for the platform.\nNote that this function should _only_ be used in route patterns as, at least\nin the case of ClojureScript, it does not validate that the input string is\nactually a valid UUID (this is handled by the route matching logic)."}, url-decode {:protocol-inline nil, :meta {:file "file:/Users/allanjiang/.m2/repository/bidi/bidi/2.1.3/bidi-2.1.3.jar!/bidi/bidi.cljc", :line 16, :column 7, :end-line 16, :end-column 17, :arglists (quote ([string]))}, :name bidi.bidi/url-decode, :variadic false, :file "file:/Users/allanjiang/.m2/repository/bidi/bidi/2.1.3/bidi-2.1.3.jar!/bidi/bidi.cljc", :end-column 17, :method-params ([string]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 16, :end-line 16, :max-fixed-arity 1, :fn-var true, :arglists (quote ([string]))}, ->TaggedMatch {:protocol-inline nil, :meta {:file "file:/Users/allanjiang/.m2/repository/bidi/bidi/2.1.3/bidi-2.1.3.jar!/bidi/bidi.cljc", :line 498, :column 12, :end-line 498, :end-column 23, :internal-ctor true, :factory :positional, :arglists (quote ([matched tag]))}, :name bidi.bidi/->TaggedMatch, :variadic false, :file "file:/Users/allanjiang/.m2/repository/bidi/bidi/2.1.3/bidi-2.1.3.jar!/bidi/bidi.cljc", :end-column 23, :method-params ([matched tag]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 498, :end-line 498, :max-fixed-arity 2, :fn-var true, :arglists (quote ([matched tag]))}, map->Route {:protocol-inline nil, :meta {:file "file:/Users/allanjiang/.m2/repository/bidi/bidi/2.1.3/bidi-2.1.3.jar!/bidi/bidi.cljc", :line 419, :column 12, :end-line 419, :end-column 17, :internal-ctor true, :factory :map, :arglists (quote ([G__35177]))}, :name bidi.bidi/map->Route, :variadic false, :file "file:/Users/allanjiang/.m2/repository/bidi/bidi/2.1.3/bidi-2.1.3.jar!/bidi/bidi.cljc", :end-column 17, :method-params ([G__35177]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 419, :end-line 419, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__35177]))}, just-path {:protocol-inline nil, :meta {:file "file:/Users/allanjiang/.m2/repository/bidi/bidi/2.1.3/bidi-2.1.3.jar!/bidi/bidi.cljc", :line 187, :column 7, :end-line 187, :end-column 16, :arglists (quote ([path]))}, :name bidi.bidi/just-path, :variadic false, :file "file:/Users/allanjiang/.m2/repository/bidi/bidi/2.1.3/bidi-2.1.3.jar!/bidi/bidi.cljc", :end-column 16, :method-params ([path]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 187, :end-line 187, :max-fixed-arity 1, :fn-var true, :arglists (quote ([path]))}, map->Alternates {:protocol-inline nil, :meta {:file "file:/Users/allanjiang/.m2/repository/bidi/bidi/2.1.3/bidi-2.1.3.jar!/bidi/bidi.cljc", :line 481, :column 12, :end-line 481, :end-column 22, :internal-ctor true, :factory :map, :arglists (quote ([G__35202]))}, :name bidi.bidi/map->Alternates, :variadic false, :file "file:/Users/allanjiang/.m2/repository/bidi/bidi/2.1.3/bidi-2.1.3.jar!/bidi/bidi.cljc", :end-column 22, :method-params ([G__35202]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 481, :end-line 481, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__35202]))}, handler {:protocol-inline nil, :meta {:file "file:/Users/allanjiang/.m2/repository/bidi/bidi/2.1.3/bidi-2.1.3.jar!/bidi/bidi.cljc", :line 521, :column 20, :end-line 521, :end-column 27, :deprecated true, :arglists (quote ([k handler] [handler])), :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([k handler] [handler]), :arglists ([k handler] [handler]), :arglists-meta (nil nil)}}, :name bidi.bidi/handler, :variadic false, :file "file:/Users/allanjiang/.m2/repository/bidi/bidi/2.1.3/bidi-2.1.3.jar!/bidi/bidi.cljc", :end-column 27, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([k handler] [handler]), :arglists ([k handler] [handler]), :arglists-meta (nil nil)}, :method-params ([k handler] [handler]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 521, :deprecated true, :end-line 521, :max-fixed-arity 2, :fn-var true, :arglists ([k handler] [handler])}, map->IdentifiableHandler {:protocol-inline nil, :meta {:file "file:/Users/allanjiang/.m2/repository/bidi/bidi/2.1.3/bidi-2.1.3.jar!/bidi/bidi.cljc", :line 512, :column 12, :end-line 512, :end-column 31, :internal-ctor true, :factory :map, :arglists (quote ([G__35221]))}, :name bidi.bidi/map->IdentifiableHandler, :variadic false, :file "file:/Users/allanjiang/.m2/repository/bidi/bidi/2.1.3/bidi-2.1.3.jar!/bidi/bidi.cljc", :end-column 31, :method-params ([G__35221]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 512, :end-line 512, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__35221]))}, RouteSeq {:meta {:file "file:/Users/allanjiang/.m2/repository/bidi/bidi/2.1.3/bidi-2.1.3.jar!/bidi/bidi.cljc", :line 421, :column 14, :end-line 421, :end-column 22, :doc nil, :protocol-symbol true, :jsdoc ("@interface"), :protocol-info {:methods {gather [[_ context]]}}}, :protocol-symbol true, :name bidi.bidi/RouteSeq, :file "file:/Users/allanjiang/.m2/repository/bidi/bidi/2.1.3/bidi-2.1.3.jar!/bidi/bidi.cljc", :end-column 22, :column 1, :line 421, :protocol-info {:methods {gather [[_ context]]}}, :info nil, :end-line 421, :tag any, :impls #{cljs/core.PersistentHashMap cljs/core.LazySeq bidi.bidi/RoutesContext cljs/core.List cljs/core.PersistentArrayMap default cljs/core.PersistentVector bidi.bidi/TaggedMatch}, :doc nil, :jsdoc ("@interface")}, match-pattern {:protocol-inline nil, :meta {:file "file:/Users/allanjiang/.m2/repository/bidi/bidi/2.1.3/bidi-2.1.3.jar!/bidi/bidi.cljc", :line 177, :column 4, :end-line 177, :end-column 17, :protocol bidi.bidi/Pattern, :doc "Return a new state if this pattern matches the given state, or\n    falsy otherwise. If a new state is returned it will usually have the\n    rest of the path to match in the :remainder entry.", :arglists (quote ([_ env]))}, :protocol bidi.bidi/Pattern, :name bidi.bidi/match-pattern, :variadic false, :file "file:/Users/allanjiang/.m2/repository/bidi/bidi/2.1.3/bidi-2.1.3.jar!/bidi/bidi.cljc", :end-column 17, :method-params ([_ env]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 176, :end-line 177, :max-fixed-arity 2, :fn-var true, :arglists (quote ([_ env])), :doc "Return a new state if this pattern matches the given state, or\n    falsy otherwise. If a new state is returned it will usually have the\n    rest of the path to match in the :remainder entry."}, route-seq {:protocol-inline nil, :meta {:file "file:/Users/allanjiang/.m2/repository/bidi/bidi/2.1.3/bidi-2.1.3.jar!/bidi/bidi.cljc", :line 424, :column 7, :end-line 424, :end-column 16, :arglists (quote ([[pattern matched] ctx] [route])), :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([[pattern matched] ctx] [route]), :arglists ([[pattern matched] ctx] [route]), :arglists-meta (nil nil)}}, :name bidi.bidi/route-seq, :variadic false, :file "file:/Users/allanjiang/.m2/repository/bidi/bidi/2.1.3/bidi-2.1.3.jar!/bidi/bidi.cljc", :end-column 16, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([[pattern matched] ctx] [route]), :arglists ([[pattern matched] ctx] [route]), :arglists-meta (nil nil)}, :method-params ([[pattern matched] ctx] [route]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 424, :end-line 424, :max-fixed-arity 2, :fn-var true, :arglists ([[pattern matched] ctx] [route])}, Matched {:meta {:file "file:/Users/allanjiang/.m2/repository/bidi/bidi/2.1.3/bidi-2.1.3.jar!/bidi/bidi.cljc", :line 183, :column 14, :end-line 183, :end-column 21, :doc nil, :protocol-symbol true, :jsdoc ("@interface"), :protocol-info {:methods {resolve-handler [[_ m]], unresolve-handler [[_ m]]}}}, :protocol-symbol true, :name bidi.bidi/Matched, :file "file:/Users/allanjiang/.m2/repository/bidi/bidi/2.1.3/bidi-2.1.3.jar!/bidi/bidi.cljc", :end-column 21, :column 1, :line 183, :protocol-info {:methods {resolve-handler [[_ m]], unresolve-handler [[_ m]]}}, :info nil, :end-line 183, :tag any, :impls #{nil cljs/core.PersistentHashMap cljs/core.LazySeq cljs/core.Var cljs/core.Keyword bidi.bidi/RoutesContext cljs/core.List cljs/core.PersistentArrayMap cljs/core.PersistentVector string bidi.bidi/TaggedMatch function bidi.bidi/IdentifiableHandler cljs/core.Symbol}, :doc nil, :jsdoc ("@interface")}, match-pair {:protocol-inline nil, :meta {:file "file:/Users/allanjiang/.m2/repository/bidi/bidi/2.1.3/bidi-2.1.3.jar!/bidi/bidi.cljc", :line 194, :column 7, :end-line 194, :end-column 17, :arglists (quote ([[pattern matched] orig-env])), :doc "A pair contains a pattern to match (either fully or partially) and an\n  expression yielding a handler. The second parameter is a map\n  containing state, including the remaining path."}, :name bidi.bidi/match-pair, :variadic false, :file "file:/Users/allanjiang/.m2/repository/bidi/bidi/2.1.3/bidi-2.1.3.jar!/bidi/bidi.cljc", :end-column 17, :method-params ([p__35136 orig-env]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 194, :end-line 194, :max-fixed-arity 2, :fn-var true, :arglists (quote ([[pattern matched] orig-env])), :doc "A pair contains a pattern to match (either fully or partially) and an\n  expression yielding a handler. The second parameter is a map\n  containing state, including the remaining path."}, transform-param {:protocol-inline nil, :meta {:file "file:/Users/allanjiang/.m2/repository/bidi/bidi/2.1.3/bidi-2.1.3.jar!/bidi/bidi.cljc", :line 80, :column 4, :end-line 80, :end-column 19, :protocol bidi.bidi/PatternSegment, :doc nil, :arglists (quote ([_]))}, :protocol bidi.bidi/PatternSegment, :name bidi.bidi/transform-param, :variadic false, :file "file:/Users/allanjiang/.m2/repository/bidi/bidi/2.1.3/bidi-2.1.3.jar!/bidi/bidi.cljc", :end-column 19, :method-params ([_]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 71, :end-line 80, :max-fixed-arity 1, :fn-var true, :arglists (quote ([_])), :doc nil}, alts {:protocol-inline nil, :meta {:file "file:/Users/allanjiang/.m2/repository/bidi/bidi/2.1.3/bidi-2.1.3.jar!/bidi/bidi.cljc", :line 492, :column 7, :end-line 492, :end-column 11, :arglists (quote ([& alts])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(alts)], :arglists ([& alts]), :arglists-meta (nil)}}, :name bidi.bidi/alts, :variadic true, :file "file:/Users/allanjiang/.m2/repository/bidi/bidi/2.1.3/bidi-2.1.3.jar!/bidi/bidi.cljc", :end-column 11, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(alts)], :arglists ([& alts]), :arglists-meta (nil)}, :method-params [(alts)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 492, :end-line 492, :max-fixed-arity 0, :fn-var true, :arglists ([& alts])}, TaggedMatch {:num-fields 2, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable bidi.bidi/Matched cljs.core/IPrintWithWriter cljs.core/IIterable bidi.bidi/RouteSeq cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name bidi.bidi/TaggedMatch, :file "file:/Users/allanjiang/.m2/repository/bidi/bidi/2.1.3/bidi-2.1.3.jar!/bidi/bidi.cljc", :end-column 23, :type true, :column 12, :internal-ctor true, :line 498, :record true, :end-line 498, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, routes {:protocol-inline nil, :meta {:file "file:/Users/allanjiang/.m2/repository/bidi/bidi/2.1.3/bidi-2.1.3.jar!/bidi/bidi.cljc", :line 466, :column 4, :end-line 466, :end-column 10, :protocol bidi.bidi/RouteProvider, :doc "Provide a bidi route structure. Returns a vector pair,\n  the first element is the pattern, the second element is the matched\n  route or routes.", :arglists (quote ([_]))}, :protocol bidi.bidi/RouteProvider, :name bidi.bidi/routes, :variadic false, :file "file:/Users/allanjiang/.m2/repository/bidi/bidi/2.1.3/bidi-2.1.3.jar!/bidi/bidi.cljc", :end-column 10, :method-params ([_]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 465, :end-line 466, :max-fixed-arity 1, :fn-var true, :arglists (quote ([_])), :doc "Provide a bidi route structure. Returns a vector pair,\n  the first element is the pattern, the second element is the matched\n  route or routes."}, unmatch-segment {:protocol-inline nil, :meta {:file "file:/Users/allanjiang/.m2/repository/bidi/bidi/2.1.3/bidi-2.1.3.jar!/bidi/bidi.cljc", :line 83, :column 4, :end-line 83, :end-column 19, :protocol bidi.bidi/PatternSegment, :doc nil, :arglists (quote ([_ params]))}, :protocol bidi.bidi/PatternSegment, :name bidi.bidi/unmatch-segment, :variadic false, :file "file:/Users/allanjiang/.m2/repository/bidi/bidi/2.1.3/bidi-2.1.3.jar!/bidi/bidi.cljc", :end-column 19, :method-params ([_ params]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 71, :end-line 83, :max-fixed-arity 2, :fn-var true, :arglists (quote ([_ params])), :doc nil}, match-beginning {:protocol-inline nil, :meta {:file "file:/Users/allanjiang/.m2/repository/bidi/bidi/2.1.3/bidi-2.1.3.jar!/bidi/bidi.cljc", :line 203, :column 7, :end-line 203, :end-column 22, :arglists (quote ([regex-pattern env])), :doc "Match the beginning of the :remainder value in m. If matched, update\n  the :remainder value in m with the path that remains after matching."}, :name bidi.bidi/match-beginning, :variadic false, :file "file:/Users/allanjiang/.m2/repository/bidi/bidi/2.1.3/bidi-2.1.3.jar!/bidi/bidi.cljc", :end-column 22, :method-params ([regex-pattern env]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 203, :end-line 203, :max-fixed-arity 2, :fn-var true, :arglists (quote ([regex-pattern env])), :doc "Match the beginning of the :remainder value in m. If matched, update\n  the :remainder value in m with the path that remains after matching."}, resolve-handler {:protocol-inline nil, :meta {:file "file:/Users/allanjiang/.m2/repository/bidi/bidi/2.1.3/bidi-2.1.3.jar!/bidi/bidi.cljc", :line 184, :column 4, :end-line 184, :end-column 19, :protocol bidi.bidi/Matched, :doc nil, :arglists (quote ([_ m]))}, :protocol bidi.bidi/Matched, :name bidi.bidi/resolve-handler, :variadic false, :file "file:/Users/allanjiang/.m2/repository/bidi/bidi/2.1.3/bidi-2.1.3.jar!/bidi/bidi.cljc", :end-column 19, :method-params ([_ m]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 183, :end-line 184, :max-fixed-arity 2, :fn-var true, :arglists (quote ([_ m])), :doc nil}, IdentifiableHandler {:num-fields 2, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable bidi.bidi/Matched cljs.core/IPrintWithWriter cljs.core/IIterable cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name bidi.bidi/IdentifiableHandler, :file "file:/Users/allanjiang/.m2/repository/bidi/bidi/2.1.3/bidi-2.1.3.jar!/bidi/bidi.cljc", :end-column 31, :type true, :column 12, :internal-ctor true, :line 512, :record true, :end-line 512, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, ->IdentifiableHandler {:protocol-inline nil, :meta {:file "file:/Users/allanjiang/.m2/repository/bidi/bidi/2.1.3/bidi-2.1.3.jar!/bidi/bidi.cljc", :line 512, :column 12, :end-line 512, :end-column 31, :internal-ctor true, :factory :positional, :arglists (quote ([id handler]))}, :name bidi.bidi/->IdentifiableHandler, :variadic false, :file "file:/Users/allanjiang/.m2/repository/bidi/bidi/2.1.3/bidi-2.1.3.jar!/bidi/bidi.cljc", :end-column 31, :method-params ([id handler]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 512, :end-line 512, :max-fixed-arity 2, :fn-var true, :arglists (quote ([id handler]))}, unresolve-handler {:protocol-inline nil, :meta {:file "file:/Users/allanjiang/.m2/repository/bidi/bidi/2.1.3/bidi-2.1.3.jar!/bidi/bidi.cljc", :line 185, :column 4, :end-line 185, :end-column 21, :protocol bidi.bidi/Matched, :doc nil, :arglists (quote ([_ m]))}, :protocol bidi.bidi/Matched, :name bidi.bidi/unresolve-handler, :variadic false, :file "file:/Users/allanjiang/.m2/repository/bidi/bidi/2.1.3/bidi-2.1.3.jar!/bidi/bidi.cljc", :end-column 21, :method-params ([_ m]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 183, :end-line 185, :max-fixed-arity 2, :fn-var true, :arglists (quote ([_ m])), :doc nil}, Route {:num-fields 2, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name bidi.bidi/Route, :file "file:/Users/allanjiang/.m2/repository/bidi/bidi/2.1.3/bidi-2.1.3.jar!/bidi/bidi.cljc", :end-column 17, :type true, :column 12, :internal-ctor true, :line 419, :record true, :end-line 419, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, routes-context {:protocol-inline nil, :meta {:file "file:/Users/allanjiang/.m2/repository/bidi/bidi/2.1.3/bidi-2.1.3.jar!/bidi/bidi.cljc", :line 546, :column 7, :end-line 546, :end-column 21, :arglists (quote ([routes context])), :doc "Wrap a Matched such that a successful match will merge the given\n  context with the match-context. The merge is such that where there\n  is a conflict, the inner sub-tree overrides the outer container."}, :name bidi.bidi/routes-context, :variadic false, :file "file:/Users/allanjiang/.m2/repository/bidi/bidi/2.1.3/bidi-2.1.3.jar!/bidi/bidi.cljc", :end-column 21, :method-params ([routes context]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 546, :end-line 546, :max-fixed-arity 2, :fn-var true, :arglists (quote ([routes context])), :doc "Wrap a Matched such that a successful match will merge the given\n  context with the match-context. The merge is such that where there\n  is a conflict, the inner sub-tree overrides the outer container."}, map->TaggedMatch {:protocol-inline nil, :meta {:file "file:/Users/allanjiang/.m2/repository/bidi/bidi/2.1.3/bidi-2.1.3.jar!/bidi/bidi.cljc", :line 498, :column 12, :end-line 498, :end-column 23, :internal-ctor true, :factory :map, :arglists (quote ([G__35212]))}, :name bidi.bidi/map->TaggedMatch, :variadic false, :file "file:/Users/allanjiang/.m2/repository/bidi/bidi/2.1.3/bidi-2.1.3.jar!/bidi/bidi.cljc", :end-column 23, :method-params ([G__35212]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 498, :end-line 498, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__35212]))}, segment-regex-group {:protocol-inline nil, :meta {:file "file:/Users/allanjiang/.m2/repository/bidi/bidi/2.1.3/bidi-2.1.3.jar!/bidi/bidi.cljc", :line 74, :column 4, :end-line 74, :end-column 23, :protocol bidi.bidi/PatternSegment, :doc nil, :arglists (quote ([_]))}, :protocol bidi.bidi/PatternSegment, :name bidi.bidi/segment-regex-group, :variadic false, :file "file:/Users/allanjiang/.m2/repository/bidi/bidi/2.1.3/bidi-2.1.3.jar!/bidi/bidi.cljc", :end-column 23, :method-params ([_]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 71, :end-line 74, :max-fixed-arity 1, :fn-var true, :arglists (quote ([_])), :doc nil}, url-encode {:protocol-inline nil, :meta {:file "file:/Users/allanjiang/.m2/repository/bidi/bidi/2.1.3/bidi-2.1.3.jar!/bidi/bidi.cljc", :line 8, :column 7, :end-line 8, :end-column 17, :arglists (quote ([string]))}, :name bidi.bidi/url-encode, :variadic false, :file "file:/Users/allanjiang/.m2/repository/bidi/bidi/2.1.3/bidi-2.1.3.jar!/bidi/bidi.cljc", :end-column 17, :method-params ([string]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 8, :end-line 8, :max-fixed-arity 1, :fn-var true, :arglists (quote ([string]))}, encode-parameter {:protocol-inline nil, :meta {:file "file:/Users/allanjiang/.m2/repository/bidi/bidi/2.1.3/bidi-2.1.3.jar!/bidi/bidi.cljc", :line 35, :column 4, :end-line 35, :end-column 20, :protocol bidi.bidi/ParameterEncoding, :doc nil, :arglists (quote ([_]))}, :protocol bidi.bidi/ParameterEncoding, :name bidi.bidi/encode-parameter, :variadic false, :file "file:/Users/allanjiang/.m2/repository/bidi/bidi/2.1.3/bidi-2.1.3.jar!/bidi/bidi.cljc", :end-column 20, :method-params ([_]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 34, :end-line 35, :max-fixed-arity 1, :fn-var true, :arglists (quote ([_])), :doc nil}, matches {:protocol-inline nil, :meta {:file "file:/Users/allanjiang/.m2/repository/bidi/bidi/2.1.3/bidi-2.1.3.jar!/bidi/bidi.cljc", :line 405, :column 4, :end-line 405, :end-column 11, :protocol bidi.bidi/Matches, :doc "A protocol used in the expansion of possible matches that the pattern can match. This is used to gather all possible routes using route-seq below.", :arglists (quote ([_]))}, :protocol bidi.bidi/Matches, :name bidi.bidi/matches, :variadic false, :file "file:/Users/allanjiang/.m2/repository/bidi/bidi/2.1.3/bidi-2.1.3.jar!/bidi/bidi.cljc", :end-column 11, :method-params ([_]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 404, :end-line 405, :max-fixed-arity 1, :fn-var true, :arglists (quote ([_])), :doc "A protocol used in the expansion of possible matches that the pattern can match. This is used to gather all possible routes using route-seq below."}, RoutesContext {:num-fields 2, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable bidi.bidi/Matched cljs.core/IPrintWithWriter cljs.core/IIterable bidi.bidi/RouteSeq cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name bidi.bidi/RoutesContext, :file "file:/Users/allanjiang/.m2/repository/bidi/bidi/2.1.3/bidi-2.1.3.jar!/bidi/bidi.cljc", :end-column 25, :type true, :column 12, :internal-ctor true, :line 533, :record true, :end-line 533, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, param-key {:protocol-inline nil, :meta {:file "file:/Users/allanjiang/.m2/repository/bidi/bidi/2.1.3/bidi-2.1.3.jar!/bidi/bidi.cljc", :line 77, :column 4, :end-line 77, :end-column 13, :protocol bidi.bidi/PatternSegment, :doc nil, :arglists (quote ([_]))}, :protocol bidi.bidi/PatternSegment, :name bidi.bidi/param-key, :variadic false, :file "file:/Users/allanjiang/.m2/repository/bidi/bidi/2.1.3/bidi-2.1.3.jar!/bidi/bidi.cljc", :end-column 13, :method-params ([_]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 71, :end-line 77, :max-fixed-arity 1, :fn-var true, :arglists (quote ([_])), :doc nil}, matches? {:protocol-inline nil, :meta {:file "file:/Users/allanjiang/.m2/repository/bidi/bidi/2.1.3/bidi-2.1.3.jar!/bidi/bidi.cljc", :line 86, :column 4, :end-line 86, :end-column 12, :protocol bidi.bidi/PatternSegment, :doc nil, :arglists (quote ([_ s]))}, :protocol bidi.bidi/PatternSegment, :name bidi.bidi/matches?, :variadic false, :file "file:/Users/allanjiang/.m2/repository/bidi/bidi/2.1.3/bidi-2.1.3.jar!/bidi/bidi.cljc", :end-column 12, :method-params ([_ s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 71, :end-line 86, :max-fixed-arity 2, :fn-var true, :arglists (quote ([_ s])), :doc nil}, gather {:protocol-inline nil, :meta {:file "file:/Users/allanjiang/.m2/repository/bidi/bidi/2.1.3/bidi-2.1.3.jar!/bidi/bidi.cljc", :line 422, :column 4, :end-line 422, :end-column 10, :protocol bidi.bidi/RouteSeq, :doc "Return a sequence of leaves", :arglists (quote ([_ context]))}, :protocol bidi.bidi/RouteSeq, :name bidi.bidi/gather, :variadic false, :file "file:/Users/allanjiang/.m2/repository/bidi/bidi/2.1.3/bidi-2.1.3.jar!/bidi/bidi.cljc", :end-column 10, :method-params ([_ context]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 421, :end-line 422, :max-fixed-arity 2, :fn-var true, :arglists (quote ([_ context])), :doc "Return a sequence of leaves"}, match-route {:protocol-inline nil, :meta {:file "file:/Users/allanjiang/.m2/repository/bidi/bidi/2.1.3/bidi-2.1.3.jar!/bidi/bidi.cljc", :line 385, :column 7, :end-line 385, :end-column 18, :arglists (quote ([route path & {:as options}])), :doc "Given a route definition data structure and a path, return the\n  handler, if any, that matches the path.", :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(route path {:as options})], :arglists ([route path & {:as options}]), :arglists-meta (nil)}}, :name bidi.bidi/match-route, :variadic true, :file "file:/Users/allanjiang/.m2/repository/bidi/bidi/2.1.3/bidi-2.1.3.jar!/bidi/bidi.cljc", :end-column 18, :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(route path {:as options})], :arglists ([route path & {:as options}]), :arglists-meta (nil)}, :method-params [(route path {:as options})], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 385, :end-line 385, :max-fixed-arity 2, :fn-var true, :arglists ([route path & {:as options}]), :doc "Given a route definition data structure and a path, return the\n  handler, if any, that matches the path."}, ->Route {:protocol-inline nil, :meta {:file "file:/Users/allanjiang/.m2/repository/bidi/bidi/2.1.3/bidi-2.1.3.jar!/bidi/bidi.cljc", :line 419, :column 12, :end-line 419, :end-column 17, :internal-ctor true, :factory :positional, :arglists (quote ([handler path]))}, :name bidi.bidi/->Route, :variadic false, :file "file:/Users/allanjiang/.m2/repository/bidi/bidi/2.1.3/bidi-2.1.3.jar!/bidi/bidi.cljc", :end-column 17, :method-params ([handler path]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 419, :end-line 419, :max-fixed-arity 2, :fn-var true, :arglists (quote ([handler path]))}, Alternates {:num-fields 1, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection bidi.bidi/Matches cljs.core/ICounted bidi.bidi/Pattern cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name bidi.bidi/Alternates, :file "file:/Users/allanjiang/.m2/repository/bidi/bidi/2.1.3/bidi-2.1.3.jar!/bidi/bidi.cljc", :end-column 22, :type true, :column 12, :internal-ctor true, :line 481, :record true, :end-line 481, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, compile-route {:protocol-inline nil, :meta {:file "file:/Users/allanjiang/.m2/repository/bidi/bidi/2.1.3/bidi-2.1.3.jar!/bidi/bidi.cljc", :line 562, :column 20, :end-line 562, :end-column 33, :deprecated true, :arglists (quote ([route]))}, :name bidi.bidi/compile-route, :variadic false, :file "file:/Users/allanjiang/.m2/repository/bidi/bidi/2.1.3/bidi-2.1.3.jar!/bidi/bidi.cljc", :end-column 33, :method-params ([route]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 562, :deprecated true, :end-line 562, :max-fixed-arity 1, :fn-var true, :arglists (quote ([route]))}, ParameterEncoding {:meta {:file "file:/Users/allanjiang/.m2/repository/bidi/bidi/2.1.3/bidi-2.1.3.jar!/bidi/bidi.cljc", :line 34, :column 14, :end-line 34, :end-column 31, :doc nil, :protocol-symbol true, :jsdoc ("@interface"), :protocol-info {:methods {encode-parameter [[_]]}}}, :protocol-symbol true, :name bidi.bidi/ParameterEncoding, :file "file:/Users/allanjiang/.m2/repository/bidi/bidi/2.1.3/bidi-2.1.3.jar!/bidi/bidi.cljc", :end-column 31, :column 1, :line 34, :protocol-info {:methods {encode-parameter [[_]]}}, :info nil, :end-line 34, :tag any, :impls #{cljs/core.Keyword number cljs/core.UUID string}, :doc nil, :jsdoc ("@interface")}, ->RoutesContext {:protocol-inline nil, :meta {:file "file:/Users/allanjiang/.m2/repository/bidi/bidi/2.1.3/bidi-2.1.3.jar!/bidi/bidi.cljc", :line 533, :column 12, :end-line 533, :end-column 25, :internal-ctor true, :factory :positional, :arglists (quote ([routes context]))}, :name bidi.bidi/->RoutesContext, :variadic false, :file "file:/Users/allanjiang/.m2/repository/bidi/bidi/2.1.3/bidi-2.1.3.jar!/bidi/bidi.cljc", :end-column 25, :method-params ([routes context]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 533, :end-line 533, :max-fixed-arity 2, :fn-var true, :arglists (quote ([routes context]))}, Matches {:meta {:file "file:/Users/allanjiang/.m2/repository/bidi/bidi/2.1.3/bidi-2.1.3.jar!/bidi/bidi.cljc", :line 404, :column 14, :end-line 404, :end-column 21, :doc nil, :protocol-symbol true, :jsdoc ("@interface"), :protocol-info {:methods {matches [[_]]}}}, :protocol-symbol true, :name bidi.bidi/Matches, :file "file:/Users/allanjiang/.m2/repository/bidi/bidi/2.1.3/bidi-2.1.3.jar!/bidi/bidi.cljc", :end-column 21, :column 1, :line 404, :protocol-info {:methods {matches [[_]]}}, :info nil, :end-line 404, :tag any, :impls #{bidi.bidi/Alternates default cljs/core.PersistentHashSet cljs/core.PersistentTreeSet}, :doc nil, :jsdoc ("@interface")}, path-for {:protocol-inline nil, :meta {:file "file:/Users/allanjiang/.m2/repository/bidi/bidi/2.1.3/bidi-2.1.3.jar!/bidi/bidi.cljc", :line 391, :column 7, :end-line 391, :end-column 15, :arglists (quote ([route handler & {:as params}])), :doc "Given a route definition data structure, a handler and an option map, return a\n  path that would route to the handler. The map must contain the values to any\n  parameters required to create the path, and extra values are silently ignored.", :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(route handler {:as params})], :arglists ([route handler & {:as params}]), :arglists-meta (nil)}}, :name bidi.bidi/path-for, :variadic true, :file "file:/Users/allanjiang/.m2/repository/bidi/bidi/2.1.3/bidi-2.1.3.jar!/bidi/bidi.cljc", :end-column 15, :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(route handler {:as params})], :arglists ([route handler & {:as params}]), :arglists-meta (nil)}, :method-params [(route handler {:as params})], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 391, :end-line 391, :max-fixed-arity 2, :fn-var true, :arglists ([route handler & {:as params}]), :doc "Given a route definition data structure, a handler and an option map, return a\n  path that would route to the handler. The map must contain the values to any\n  parameters required to create the path, and extra values are silently ignored."}, Pattern {:meta {:file "file:/Users/allanjiang/.m2/repository/bidi/bidi/2.1.3/bidi-2.1.3.jar!/bidi/bidi.cljc", :line 176, :column 14, :end-line 176, :end-column 21, :doc nil, :protocol-symbol true, :jsdoc ("@interface"), :protocol-info {:methods {match-pattern [[_ env]], unmatch-pattern [[_ m]]}}}, :protocol-symbol true, :name bidi.bidi/Pattern, :file "file:/Users/allanjiang/.m2/repository/bidi/bidi/2.1.3/bidi-2.1.3.jar!/bidi/bidi.cljc", :end-column 21, :column 1, :line 176, :protocol-info {:methods {match-pattern [[_ env]], unmatch-pattern [[_ m]]}}, :info nil, :end-line 176, :tag any, :impls #{cljs/core.PersistentHashMap js/RegExp boolean cljs/core.Keyword bidi.bidi/Alternates cljs/core.PersistentArrayMap cljs/core.PersistentVector cljs/core.PersistentHashSet string cljs/core.PersistentTreeSet}, :doc nil, :jsdoc ("@interface")}, unmatch-pattern {:protocol-inline nil, :meta {:file "file:/Users/allanjiang/.m2/repository/bidi/bidi/2.1.3/bidi-2.1.3.jar!/bidi/bidi.cljc", :line 181, :column 4, :end-line 181, :end-column 19, :protocol bidi.bidi/Pattern, :doc nil, :arglists (quote ([_ m]))}, :protocol bidi.bidi/Pattern, :name bidi.bidi/unmatch-pattern, :variadic false, :file "file:/Users/allanjiang/.m2/repository/bidi/bidi/2.1.3/bidi-2.1.3.jar!/bidi/bidi.cljc", :end-column 19, :method-params ([_ m]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 176, :end-line 181, :max-fixed-arity 2, :fn-var true, :arglists (quote ([_ m])), :doc nil}, RouteProvider {:meta {:file "file:/Users/allanjiang/.m2/repository/bidi/bidi/2.1.3/bidi-2.1.3.jar!/bidi/bidi.cljc", :line 465, :column 14, :end-line 465, :end-column 27, :doc nil, :protocol-symbol true, :jsdoc ("@interface"), :protocol-info {:methods {routes [[_]]}}}, :protocol-symbol true, :name bidi.bidi/RouteProvider, :file "file:/Users/allanjiang/.m2/repository/bidi/bidi/2.1.3/bidi-2.1.3.jar!/bidi/bidi.cljc", :end-column 27, :column 1, :line 465, :protocol-info {:methods {routes [[_]]}}, :info nil, :end-line 465, :tag any, :impls #{}, :doc nil, :jsdoc ("@interface")}, PatternSegment {:meta {:file "file:/Users/allanjiang/.m2/repository/bidi/bidi/2.1.3/bidi-2.1.3.jar!/bidi/bidi.cljc", :line 71, :column 14, :end-line 71, :end-column 28, :doc nil, :protocol-symbol true, :jsdoc ("@interface"), :protocol-info {:methods {segment-regex-group [[_]], param-key [[_]], transform-param [[_]], unmatch-segment [[_ params]], matches? [[_ s]]}}}, :protocol-symbol true, :name bidi.bidi/PatternSegment, :file "file:/Users/allanjiang/.m2/repository/bidi/bidi/2.1.3/bidi-2.1.3.jar!/bidi/bidi.cljc", :end-column 28, :column 1, :line 71, :protocol-info {:methods {segment-regex-group [[_]], param-key [[_]], transform-param [[_]], unmatch-segment [[_ params]], matches? [[_ s]]}}, :info nil, :end-line 71, :tag any, :impls #{js/RegExp cljs/core.Keyword cljs/core.PersistentVector string function}, :doc nil, :jsdoc ("@interface")}, unmatch-pair {:protocol-inline nil, :meta {:file "file:/Users/allanjiang/.m2/repository/bidi/bidi/2.1.3/bidi-2.1.3.jar!/bidi/bidi.cljc", :line 324, :column 7, :end-line 324, :end-column 19, :arglists (quote ([v m]))}, :name bidi.bidi/unmatch-pair, :variadic false, :file "file:/Users/allanjiang/.m2/repository/bidi/bidi/2.1.3/bidi-2.1.3.jar!/bidi/bidi.cljc", :end-column 19, :method-params ([v m]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 324, :end-line 324, :max-fixed-arity 2, :fn-var true, :arglists (quote ([v m]))}, ->Alternates {:protocol-inline nil, :meta {:file "file:/Users/allanjiang/.m2/repository/bidi/bidi/2.1.3/bidi-2.1.3.jar!/bidi/bidi.cljc", :line 481, :column 12, :end-line 481, :end-column 22, :internal-ctor true, :factory :positional, :arglists (quote ([alts]))}, :name bidi.bidi/->Alternates, :variadic false, :file "file:/Users/allanjiang/.m2/repository/bidi/bidi/2.1.3/bidi-2.1.3.jar!/bidi/bidi.cljc", :end-column 22, :method-params ([alts]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 481, :end-line 481, :max-fixed-arity 1, :fn-var true, :arglists (quote ([alts]))}, match-route* {:protocol-inline nil, :meta {:file "file:/Users/allanjiang/.m2/repository/bidi/bidi/2.1.3/bidi-2.1.3.jar!/bidi/bidi.cljc", :line 380, :column 7, :end-line 380, :end-column 19, :arglists (quote ([route path options]))}, :name bidi.bidi/match-route*, :variadic false, :file "file:/Users/allanjiang/.m2/repository/bidi/bidi/2.1.3/bidi-2.1.3.jar!/bidi/bidi.cljc", :end-column 19, :method-params ([route path options]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 380, :end-line 380, :max-fixed-arity 3, :fn-var true, :arglists (quote ([route path options]))}, ...}, :cljs.spec/registry-ref [], :require-macros nil, :cljs.analyzer/constants {:seen #{tag :alts :path :routes handler :matched path alts routes :params matched :route :otherwise :route-params :id :context :remainder :tag id :handler context :request-method}, :order [:otherwise :remainder :handler :route-params :params :request-method :route :path handler path :alts alts :tag :matched matched tag :id id :routes :context routes context]}, :doc nil}